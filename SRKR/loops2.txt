A security guard at an apartment complex logs the number of visitors for each flat across 3 blocks (A, B, and C), each having 4 flats. Write a Python program to enter and display the number of visitors per flat and also show the total visitors per block.
Test Case 1:
Input:
S
Block A: [2, 0, 1, 3]  
Block B: [1, 1, 0, 2]  
Block C: [4, 0, 2, 2]
Output:
Block A total: 6  
Block B total: 4  
Block C total: 8

Test Case 2:
Input:
A: [0,0,0,0]  
B: [1,1,1,1]  
C: [3,2,1,0]

Output:
A: 0  
B: 4  
C: 6



A parking area has 2 levels. Each level has 5 rows of parking slots. Input for each slot is either 1 (occupied) or 0 (empty). Display total vehicals parked per level and grand total.

testcase:

Level 1: [1,0,1,1,0]  
Level 2: [1,1,1,1,1]  
Output:
Level 1: 3 cars  
Level 2: 5 cars  
Total: 8

Level 1: [0,0,0,0,0]  
Level 2: [1,0,1,0,1]  
Output:
Level 1: 0  
Level 2: 3  
Total: 3



total_parked = 0

for level in range(1, 3):
    print(f"Enter slot status (1=occupied, 0=empty) for Level {level}:")
    level_total = 0
    for row in range(1, 6):
        slot = int(input(f"  Slot {row}: "))
        if slot == 1:
            level_total += 1
    print(f"Cars parked on Level {level}: {level_total}")
    total_parked += level_total

print(f"Total cars in parking: {total_parked}")







Track the number of present students in 3 classrooms, each with 6 students. A student is marked 'P' for present or 'A' for absent. Show how many were present in each classroom.

Input:
Room 1: ['P','A','P','P','A','P']  
Room 2: ['P','P','P','P','P','P']  
Room 3: ['A','A','A','A','A','A']

Output:
Room 1: 4 present  
Room 2: 6 present  
Room 3: 0 present



Input:
All rooms = ['P','A','P','A','P','A']  
Output:
Each Room: 3 present



A cafeteria records its snack sales for 5 days (Mon–Fri), with 3 items per day: sandwich, tea, and burger. Input daily units sold for each item and display total units sold per item across the week.

Input (units sold in order):
Mon: [5, 10, 7]  
Tue: [6, 9, 8]  
Wed: [4, 8, 6]  
Thu: [7, 10, 9]  
Fri: [6, 7, 8]  

Output:
Sandwich: 28  
Tea: 44  
Burger: 38



All items sold 1 unit per day  
Output: 5, 5, 5





# N=int(input("Enter the N Values"))
# sum=0
# for i in range(N+1):
#     sum+=i
# print("Sum",sum)

# def sum_n_numbers():
#     N=int(input("Enter the N Values"))
#     sum=0
#     for i in range(N+1):
#         sum+=i
#     return print("Sum",sum)
# sum_n_numbers()


def sum_n_numbers(N):
    sum=0
    for i in range(N+1):
        sum+=i
    return sum

N=int(input("Enter the N Values"))
sum_N=sum_n_numbers(N)
print("Sum",sum_N)




Simulate an ATM that returns the least number of currency notes (₹2000, ₹1000,₹500, ₹100, ₹50, ₹10) for a withdrawal amount.
Input: ₹3860  
Output: ₹2000:1, ₹1000:1, ₹500:1, ₹100:3, ₹50:1, ₹10:1

def atm_withdrawl(amount):
    denominations=[2000,1000,500,200,100,50,20,10]
    result={}
    for note in denominations:
        count=amount//note
        if count:
            result[note]=count
            amount%=note
    return result 
amount=int(input("Enter the amount: "))
notes=atm_withdrawl(amount)
print("Currency Notes Dispensed:")
print(notes)


*
* *
* * *
* * * *

1
1 2 
1 2 3
1 2 3 4

# A
# A B
# A B C

rows=int(input("ENter no of rows: "))
for i in range(1,rows+1):
    for j in range(1,i+1):
        # if i<=j:
            print(chr(64+j) ,end=' ')
    print()




 Scenario: ATM Withdrawal System
 Problem:
 Write a program to simulate an ATM withdrawal system.
 The user has an initial account balance of $10,000.
 The program should:
 1. Ask the user how much they want to withdraw.
 2. Check if the amount is a multiple of 100.
 3. Ensure the withdrawal amount does not exceed the account balance.
 4. Deduct the amount if valid and display the remaining balance.
 5. Allow multiple withdrawals until the user decides to exit or the balance is insufficient.


balance=10000
while True:
    print("\n--- ATM Withdrawal System ---")
    print(f"Current Balance: {balance}")
    withdraw=int(intput("Enter the amout : "))
    if withdraw%100 !=0:
        print("ENter valid amount muliple of 100.")
    elif withdraw>balance:
        print("insuffient")
    else:
        balance-=withdraw
        print(f"Withdrawal successful! Remaining balance: ${balance}")
    if balance==0:
        print("Your balance is zero. No further withdrawals possible.")
        break
    another=input("Yes/No: ").lower()
    if another!="yes":
        print("Thank you for using the ATM. Goodbye!")
        break



balance=10000
def withdrw(balance):
    while True:
        withdraw=int(input("Enter the amout : "))
        if withdraw%100 !=0:
            print("ENter valid amount muliple of 100.")
        elif withdraw>balance:
            print("insuffient")
        else:
            balance-=withdraw
            print(f"Withdrawal successful! Remaining balance: ${balance}")
        if balance==0:
            print("Your balance is zero. No further withdrawals possible.")
            break
        another=input("Yes/No: ").lower()
        if another!="yes":
            print("Thank you for using the ATM. Goodbye!")
            break
        
while True:
    print("\n--- ATM Withdrawal System ---")
    print(f"Current Balance: {balance}")
    print("1.Withdraw")
    choice=int(input("Enter ther your choice: "))
    if choice==1:
        withdrw(balance)
    else:print("Enter valid choice")
        
    




